<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Performance on easystats</title>
    <link>/blog/categories/performance/</link>
    <description>Recent content in Performance on easystats</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 30 Apr 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/blog/categories/performance/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Compute R2s and other performance indices for all your models!</title>
      <link>/blog/posts/performance_presentation/</link>
      <pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/posts/performance_presentation/</guid>
      <description>


&lt;p&gt;&lt;img src=&#34;https://github.com/easystats/performance/raw/master/man/figures/logo.png&#34; width=&#34;200px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Indices of model &lt;strong&gt;performance&lt;/strong&gt; (&lt;em&gt;i.e.&lt;/em&gt;, model quality, goodness of fit, predictive accuracy etc.) are very important, both for model &lt;em&gt;comparison&lt;/em&gt; and model &lt;em&gt;description&lt;/em&gt; purposes. However, their computation or extraction for a wide variety of models can be complex.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;To address this, please let us introduce the &lt;/em&gt;&lt;/strong&gt; &lt;a href=&#34;https://github.com/easystats/performance&#34;&gt;&lt;strong&gt;&lt;code&gt;performance&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;&lt;em&gt;package!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div id=&#34;performance&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;performance&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/orgs/easystats/people&#34;&gt;We&lt;/a&gt; have recently decided to collaborate around the new &lt;a href=&#34;https://github.com/easystats&#34;&gt;&lt;strong&gt;easystats project&lt;/strong&gt;&lt;/a&gt;, a set of packages designed to make your life &lt;em&gt;easier&lt;/em&gt; (currently WIP). This project encompasses several packages, devoted for instance to &lt;a href=&#34;https://github.com/easystats/insight&#34;&gt;model access&lt;/a&gt; or &lt;a href=&#34;https://github.com/easystats/bayestestR&#34;&gt;Bayesian analysis&lt;/a&gt;, as well as &lt;a href=&#34;https://github.com/easystats/performance&#34;&gt;indices of model performance&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The goal of &lt;a href=&#34;https://github.com/easystats/performance&#34;&gt;&lt;code&gt;performance&lt;/code&gt;&lt;/a&gt; is to provide lightweight tools to &lt;strong&gt;assess and check the quality of your model&lt;/strong&gt;. It includes functions such as &lt;a href=&#34;https://easystats.github.io/performance/reference/r2.html&#34;&gt;&lt;code&gt;R2&lt;/code&gt;&lt;/a&gt; for many models (including logistic, mixed and Bayesian models), &lt;a href=&#34;https://easystats.github.io/performance/reference/icc.html&#34;&gt;&lt;code&gt;ICC&lt;/code&gt;&lt;/a&gt; or helpers to check &lt;a href=&#34;https://easystats.github.io/performance/reference/check_convergence.html&#34;&gt;&lt;code&gt;convergence&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://easystats.github.io/performance/reference/check_overdispersion.html&#34;&gt;&lt;code&gt;overdipsersion&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://easystats.github.io/performance/reference/check_zeroinflation.html&#34;&gt;&lt;code&gt;zero-inflation&lt;/code&gt;&lt;/a&gt;. See the &lt;strong&gt;list of functions&lt;/strong&gt; &lt;a href=&#34;https://easystats.github.io/performance/reference/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;performance&lt;/code&gt; can be installed as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;performance&amp;quot;)  # Install the package
library(performance)  # Load it&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;examples&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Examples&lt;/h2&gt;
&lt;div id=&#34;mixed-models&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Mixed Models&lt;/h3&gt;
&lt;p&gt;First, we calculate the r-squared value and intra-class correlation coefficient (ICC) for a mixed model, using &lt;a href=&#34;https://easystats.github.io/performance/reference/r2.html&#34;&gt;&lt;strong&gt;r2()&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://easystats.github.io/performance/reference/icc.html&#34;&gt;&lt;strong&gt;icc()&lt;/strong&gt;&lt;/a&gt;. &lt;code&gt;r2()&lt;/code&gt; internally calls the appropriate function for the given model. In case of mixed models this will be &lt;a href=&#34;https://easystats.github.io/performance/reference/r2_nakagawa.html&#34;&gt;&lt;strong&gt;r2_nakagawa()&lt;/strong&gt;&lt;/a&gt;. &lt;code&gt;r2_nakagawa()&lt;/code&gt; computes the marginal and conditional r-squared values, while &lt;code&gt;icc()&lt;/code&gt; calculates an adjusted and conditional ICC, both based on the proposals from &lt;em&gt;Nakagawa et al. 2017&lt;/em&gt;. For more details on the computation of the variances, see &lt;a href=&#34;https://easystats.github.io/insight/reference/get_variance.html&#34;&gt;&lt;strong&gt;get_variance()&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Load the lme4 package
library(lme4)

# Fit a mixed model
model &amp;lt;- lmer(Sepal.Width ~ Petal.Length + (1|Species), data = iris)

# compute R2, based on Nakagawa et al. 2017
r2(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; # R2 for mixed models
&amp;gt; 
&amp;gt;   Conditional R2: 0.913
&amp;gt;      Marginal R2: 0.216&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# compute intra-class correlation coefficient (ICC)
icc(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; # Intraclass Correlation Coefficient
&amp;gt; 
&amp;gt;      Adjusted ICC: 0.889
&amp;gt;   Conditional ICC: 0.697&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s compute &lt;strong&gt;all available&lt;/strong&gt; indices of performance appropriate for a given model. This can be done via the &lt;a href=&#34;https://easystats.github.io/performance/reference/model_performance.html&#34;&gt;&lt;strong&gt;model_performance()&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Compute all performance indices
model_performance(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;   AIC BIC R2_conditional R2_marginal  ICC RMSE
&amp;gt; 1 107 119           0.91        0.22 0.89 0.31&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;bayesian-mixed-models&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Bayesian Mixed Models&lt;/h3&gt;
&lt;p&gt;For Bayesian mixed models, we have the same features available (r-squared, ICC, …). In this example, we focus on the output from &lt;code&gt;model_performance()&lt;/code&gt; only.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Load the rstanarm package
library(rstanarm)

# Fit a Bayesian mixed model
model &amp;lt;- stan_glmer(Sepal.Width ~ Petal.Length + (1|Species), data = iris)

# Compute performance indices
model_performance(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;   ELPD ELPD_SE LOOIC LOOIC_SE   R2 R2_SE R2_marginal R2_marginal_SE
&amp;gt; 1  -43      10    87       20 0.47 0.045        0.27          0.047
&amp;gt;   R2_LOO_adjusted RMSE
&amp;gt; 1            0.45 0.31&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Don’t forget to check out the&lt;/strong&gt; &lt;a href=&#34;https://easystats.github.io/performance/&#34;&gt;&lt;strong&gt;documentation here&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;for more!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details about &lt;code&gt;performance&lt;/code&gt;’s features are comming soon, stay tuned ;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;get-involved&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Get Involved&lt;/h2&gt;
&lt;p&gt;There is definitely room for improvement, and some new exciting features are already planned. Feel free to let us know how we could further improve this package!&lt;/p&gt;
&lt;p&gt;To conclude, note that &lt;em&gt;easystats&lt;/em&gt; is a new project in active development. Thus, do not hesitate to contact us if &lt;strong&gt;you want to get involved :)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Check out our other blog posts&lt;/strong&gt; &lt;a href=&#34;https://easystats.github.io/blog/posts/&#34;&gt;&lt;strong&gt;&lt;em&gt;here&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
      
            <category>R</category>
      
            <category>easystats</category>
      
            <category>performance</category>
      
            <category>R2</category>
      
            <category>ICC</category>
      
            <category>AIC</category>
      
      
            <category>R</category>
      
            <category>performance</category>
      
    </item>
    
  </channel>
</rss>